syntax = "proto3";
package influxdata.iox.catalog.v1;
option go_package = "github.com/influxdata/iox/catalog/v1";

import "influxdata/iox/catalog/v1/parquet_file.proto";

service CatalogService {
    // Get the parquet_file catalog records in the given partition
    rpc GetParquetFilesByPartitionId(GetParquetFilesByPartitionIdRequest) returns (GetParquetFilesByPartitionIdResponse);

    // Get the partition catalog records by the table id
    rpc GetPartitionsByTableId(GetPartitionsByTableIdRequest) returns (GetPartitionsByTableIdResponse);
}

message GetParquetFilesByPartitionIdRequest {
    // the partition id
    int64 partition_id = 1;
}

message GetParquetFilesByPartitionIdResponse {
    // the parquet_file records in the partition
    repeated ParquetFile parquet_files = 1;
}

message Partition {
    // the partition id
    int64 id = 1;
    // the sequencer the partition is under
    int64 sequencer_id = 2;
    // the table id the partition is in
    int64 table_id = 3;
    // the partition key
    string key = 4;
    // the sort key for data in parquet files in the partition
    string sort_key = 5;
}

message GetPartitionsByTableIdRequest {
    int64 table_id = 1;
}

message GetPartitionsByTableIdResponse {
    repeated Partition partitions = 1;
}